unit Login;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.Layouts,
  idHashSHA,
  FMX.Objects, FMX.Controls.Presentation, FMX.StdCtrls, FMX.Edit, Utils;

type
  TForm1 = class(TForm)
    Image1: TImage;
    Layout1: TLayout;
    Label1: TLabel;
    Image2: TImage;
    Label3: TLabel;
    campo_usuario: TEdit;
    campo_senha: TEdit;
    Label4: TLabel;
    remember: TRadioButton;
    Label5: TLabel;
    RoundRect1: TRoundRect;
    Layout2: TLayout;
    Label2: TLabel;
    Label7: TLabel;
    procedure Label2Click(Sender: TObject);
    procedure Label7Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    function SHA1FromString(const AString: string): string;
  end;

var
  Form1: TForm1;

implementation

{$R *.fmx}

uses Cadastro, TelaInicial, UDB;
{$R *.LgXhdpiPh.fmx ANDROID}


procedure TForm1.Label2Click(Sender: TObject);
var
  senha: string;
begin
  senha := SHA1FromString(campo_senha.Text);

  DB.FDQueryPessoa.Close;
  DB.FDQueryPessoa.ParamByName('pusuario').AsString := campo_usuario.Text;
  DB.FDQueryPessoa.Open();

    if not (DB.FDQueryPessoa.IsEmpty) and (senha = DB.FDQueryPessoasenha.AsString) then
  begin
    if not Assigned(Form3) then
      Application.CreateForm(TForm3, Form3);
    Form3.Show;
    if not remember.IsChecked then
      campo_usuario.Text := '';
      campo_senha.Text := '';
    Form1.Close;

  end
  else
  begin
    ShowMessage('Login ou senha não confere');
  end;
end;

procedure TForm1.Label7Click(Sender: TObject);
begin
 if not Assigned(Form2) then
      Application.CreateForm(TForm2, Form2);
    Form2.Show;
end;

function TForm1.SHA1FromString(const AString: string): string;
var
  SHA1: TIdHashSHA1;
begin
  SHA1 := TIdHashSHA1.Create;
  try
    Result := SHA1.HashStringAsHex(AString);
  finally
    SHA1.Free;
  end;
end;

end.
